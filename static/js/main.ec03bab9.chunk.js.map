{"version":3,"sources":["components/NavBar/NavBar.tsx","api.ts","components/Loader/Loader.tsx","components/Person/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","isActive","classNames","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonInfo","personInfo","people","name","sex","born","died","fatherName","motherName","slug","findParent","parentName","parent","find","person","PeopleTable","useParams","useState","setPeople","loadingError","setLoadingError","isLoading","setIsLoading","getPeopleFromServer","useEffect","length","map","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ec03bab9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  personInfo: Person\n  people: Person[]\n}\n\nexport const PersonInfo: React.FC<Props> = ({ personInfo, people }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = personInfo;\n\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return (\n        <NavLink\n          to={`/people/${parent.slug}`}\n          className={classNames({ 'has-text-danger': parent.sex === 'f' })}\n        >\n          {parentName}\n        </NavLink>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <>\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{findParent(motherName)}</td>\n      <td>{findParent(fatherName)}</td>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../Person';\n\nexport const PeopleTable: React.FC = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      setIsLoading(true);\n      setLoadingError(false);\n\n      setPeople(await getPeople());\n\n      setIsLoading(false);\n    } catch (error) {\n      setLoadingError(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      {loadingError ? (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      ) : (\n        <>\n          <h1 className=\"title\">People Page</h1>\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <>\n                  {people.length === 0 && !isLoading && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"\n                      table is-striped\n                      is-hoverable\n                      is-narrow is-fullwidth\n                    \"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {people.map(person => (\n                        <tr\n                          className={classNames({\n                            'has-background-warning': person.slug === slug,\n                          })}\n                          key={person.slug}\n                          data-cy=\"person\"\n                        >\n                          <PersonInfo personInfo={person} people={people} />\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { PeopleTable } from './components/PeopleTable';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"people\">\n              <Route index element={<PeopleTable />} />\n              <Route path=\":slug\" element={<PeopleTable />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}